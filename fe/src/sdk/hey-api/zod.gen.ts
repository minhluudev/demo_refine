// This file is auto-generated by @hey-api/openapi-ts

import { z } from "zod";

export const zCategoryRequest = z.object({
  title: z.string().max(255).register(z.globalRegistry, {
    description:
      "required:Tên danh mục là bắt buộc.|type:Tên danh mục phải là chuỗi .|max: Tên danh mục không vượt quá 255 ký tự.",
  }),
  description: z.optional(z.union([z.string(), z.null()])),
});

export const zPostRequest = z.object({
  title: z.string().max(255).register(z.globalRegistry, {
    description: "Tiêu đề bài viết. Bắt buộc, tối đa 255 ký tự.",
  }),
  content: z.optional(z.union([z.string(), z.null()])),
  category_id: z.int().register(z.globalRegistry, {
    description:
      "ID danh mục mà bài viết thuộc về. Bắt buộc, phải tồn tại trong bảng categories.",
  }),
  tags: z.optional(z.union([z.array(z.string().min(2)), z.null()])),
});

/**
 * Category
 */
export const zCategory = z.object({
  id: z.optional(z.int()),
  title: z.string(),
  description: z.optional(z.string()),
  created_at: z.optional(z.string()),
  updated_at: z.optional(z.string()),
});

export const zPost = z.object({
  id: z.optional(z.int()),
  title: z.optional(z.string()),
  content: z.optional(z.union([z.string(), z.null()])),
  category_id: z.optional(z.int()),
  tags: z.optional(z.union([z.array(z.string()), z.null()])),
  category: z.optional(zCategory),
});

export const zPaginationLinks = z.object({
  first: z.optional(z.string()),
  last: z.optional(z.string()),
  prev: z.optional(z.union([z.string(), z.null()])),
  next: z.optional(z.union([z.string(), z.null()])),
});

export const zPaginationMeta = z.object({
  current_page: z.optional(z.int()),
  from: z.optional(z.int()),
  last_page: z.optional(z.int()),
  path: z.optional(z.string()),
  per_page: z.optional(z.int()),
  to: z.optional(z.int()),
  total: z.optional(z.int()),
});
